{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Grid, Input, Button } from \"semantic-ui-react\";\nimport Layout from \"./layout\";\nimport web3 from \"../ethereum/web3\";\nimport ait from \"../ethereum/Ait\";\n\nclass change extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      name: \"\",\n      rollno: \"\",\n      branch: \"\",\n      regno: \"\",\n      dob: \"\",\n      bloodGp: \" \",\n      nloading: false,\n      rloading: false,\n      bloading: false,\n      dloading: false,\n      gloading: false,\n      lloading: false\n    });\n\n    _defineProperty(this, \"changeName\", async () => {\n      this.setState({\n        nloading: true\n      });\n      const accounts = await web3.eth.getAccounts();\n      await ait.methods.changeName(this.state.name, this.state.regno).send({\n        from: accounts[0]\n      }); // console.log(this.state.regno);\n\n      this.setState({\n        nloading: false\n      });\n    });\n\n    _defineProperty(this, \"changeRollNo\", async () => {\n      this.setState({\n        rloading: true\n      });\n      const accounts = await web3.eth.getAccounts();\n      await ait.methods.changeRollno(this.state.rollno, this.state.regno).send({\n        from: accounts[0]\n      });\n      this.setState({\n        rloading: false\n      });\n    });\n\n    _defineProperty(this, \"changeBranch\", async () => {\n      this.setState({\n        bloading: true\n      });\n      const accounts = await web3.eth.getAccounts();\n      await ait.methods.changeBranch(this.state.branch, this.state.regno).send({\n        from: accounts[0]\n      });\n      this.setState({\n        bloading: false\n      });\n    });\n\n    _defineProperty(this, \"changeDob\", async () => {\n      this.setState({\n        dloading: true\n      });\n      const accounts = await web3.eth.getAccounts();\n      await ait.methods.changeDob(this.state.dob, this.state.regno).send({\n        from: accounts[0]\n      });\n      this.setState({\n        dloading: false\n      });\n    });\n\n    _defineProperty(this, \"changeBloodGp\", async () => {\n      this.setState({\n        gloading: true\n      });\n      const accounts = await web3.eth.getAccounts();\n      await ait.methods.changeBloodGp(this.state.bloodGp, this.state.regno).send({\n        from: accounts[0]\n      });\n      this.setState({\n        gloading: false\n      });\n    });\n\n    _defineProperty(this, \"left\", async () => {\n      const accounts = await web3.eth.getAccounts();\n      await ait.methods.left(this.state.regno).send({\n        from: accounts[0]\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Form, null, __jsx(Form.Field, {\n      inline: true\n    }, __jsx(\"label\", null, \"Reg No. \"), __jsx(Input, {\n      value: this.state.regno,\n      onChange: event => this.setState({\n        regno: event.target.value\n      })\n    }))))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Form, {\n      onSubmit: this.changeName\n    }, __jsx(Form.Field, {\n      inline: true\n    }, __jsx(\"label\", null, \"Name :\"), __jsx(Input, {\n      value: this.state.name,\n      onChange: event => this.setState({\n        name: event.target.value\n      })\n    }), __jsx(Button, {\n      positive: true,\n      style: {\n        marginLeft: \"10px\"\n      }\n    }, \"Submit\"))))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Form, {\n      onSubmit: this.changeRollNo\n    }, __jsx(Form.Field, {\n      inline: true\n    }, __jsx(\"label\", null, \"Roll No :\"), __jsx(Input, {\n      value: this.state.rollno,\n      onChange: event => this.setState({\n        rollno: event.target.value\n      })\n    }), __jsx(Button, {\n      positive: true,\n      style: {\n        marginLeft: \"10px\"\n      }\n    }, \"Submit\"))))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Form, {\n      onSubmit: this.changeBranch\n    }, __jsx(Form.Field, {\n      inline: true\n    }, __jsx(\"label\", null, \"Branch :\"), __jsx(Input, {\n      value: this.state.branch,\n      onChange: event => this.setState({\n        branch: event.target.value\n      })\n    }), __jsx(Button, {\n      positive: true,\n      style: {\n        marginLeft: \"10px\"\n      }\n    }, \"Submit\"))))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Form, {\n      onSubmit: this.changeDob\n    }, __jsx(Form.Field, {\n      inline: true\n    }, __jsx(\"label\", null, \"Date of Birth :\"), __jsx(Input, {\n      value: this.state.dob,\n      onChange: event => this.setState({\n        dob: event.target.value\n      })\n    }), __jsx(Button, {\n      positive: true,\n      style: {\n        marginLeft: \"10px\"\n      }\n    }, \"Submit\"))))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Form, {\n      onSubmit: this.changeBloodGp\n    }, __jsx(Form.Field, {\n      inline: true\n    }, __jsx(\"label\", null, \"Blood Group :\"), __jsx(Input, {\n      value: this.state.bloodGp,\n      onChange: event => this.setState({\n        bloodGp: event.target.value\n      })\n    }), __jsx(Button, {\n      positive: true,\n      style: {\n        marginLeft: \"10px\"\n      }\n    }, \"Submit\"))))), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Form, {\n      onSubmit: this.left\n    }, __jsx(Button, {\n      positive: true,\n      style: {\n        marginTop: \"10px\"\n      },\n      negative: true\n    }, \"LEFT!!!!\"))))));\n  }\n\n}\n\nexport default change;","map":{"version":3,"sources":["/mnt/d/Cards/pages/update.js"],"names":["React","Component","Form","Grid","Input","Button","Layout","web3","ait","change","name","rollno","branch","regno","dob","bloodGp","nloading","rloading","bloading","dloading","gloading","lloading","setState","accounts","eth","getAccounts","methods","changeName","state","send","from","changeRollno","changeBranch","changeDob","changeBloodGp","left","render","event","target","value","marginLeft","changeRollNo","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Grid, Input, Button } from \"semantic-ui-react\";\r\nimport Layout from \"./layout\";\r\nimport web3 from \"../ethereum/web3\";\r\nimport ait from \"../ethereum/Ait\";\r\n\r\nclass change extends Component {\r\n  state = {\r\n    name: \"\",\r\n    rollno: \"\",\r\n    branch: \"\",\r\n    regno: \"\",\r\n    dob: \"\",\r\n    bloodGp: \" \",\r\n    nloading: false,\r\n    rloading: false,\r\n    bloading: false,\r\n    dloading: false,\r\n    gloading: false,\r\n    lloading: false\r\n  };\r\n  changeName = async () => {\r\n    this.setState({ nloading: true });\r\n    const accounts = await web3.eth.getAccounts();\r\n    await ait.methods\r\n      .changeName(this.state.name, this.state.regno)\r\n      .send({ from: accounts[0] });\r\n    // console.log(this.state.regno);\r\n    this.setState({ nloading: false });\r\n  };\r\n  changeRollNo = async () => {\r\n    this.setState({ rloading: true });\r\n    const accounts = await web3.eth.getAccounts();\r\n    await ait.methods\r\n      .changeRollno(this.state.rollno, this.state.regno)\r\n      .send({ from: accounts[0] });\r\n    this.setState({ rloading: false });\r\n  };\r\n  changeBranch = async () => {\r\n    this.setState({ bloading: true });\r\n    const accounts = await web3.eth.getAccounts();\r\n    await ait.methods\r\n      .changeBranch(this.state.branch, this.state.regno)\r\n      .send({ from: accounts[0] });\r\n    this.setState({ bloading: false });\r\n  };\r\n  changeDob = async () => {\r\n    this.setState({ dloading: true });\r\n    const accounts = await web3.eth.getAccounts();\r\n    await ait.methods\r\n      .changeDob(this.state.dob, this.state.regno)\r\n      .send({ from: accounts[0] });\r\n    this.setState({ dloading: false });\r\n  };\r\n  changeBloodGp = async () => {\r\n    this.setState({ gloading: true });\r\n    const accounts = await web3.eth.getAccounts();\r\n    await ait.methods\r\n      .changeBloodGp(this.state.bloodGp, this.state.regno)\r\n      .send({ from: accounts[0] });\r\n    this.setState({ gloading: false });\r\n  };\r\n  left = async () => {\r\n    const accounts = await web3.eth.getAccounts();\r\n    await ait.methods.left(this.state.regno).send({ from: accounts[0] });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form>\r\n                <Form.Field inline>\r\n                  <label>Reg No. </label>\r\n                  <Input\r\n                    value={this.state.regno}\r\n                    onChange={event =>\r\n                      this.setState({ regno: event.target.value })\r\n                    }\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form onSubmit={this.changeName}>\r\n                <Form.Field inline>\r\n                  <label>Name :</label>\r\n                  <Input\r\n                    value={this.state.name}\r\n                    onChange={event =>\r\n                      this.setState({ name: event.target.value })\r\n                    }\r\n                  />\r\n                  <Button positive style={{ marginLeft: \"10px\" }}>\r\n                    Submit\r\n                  </Button>\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form onSubmit={this.changeRollNo}>\r\n                <Form.Field inline>\r\n                  <label>Roll No :</label>\r\n                  <Input\r\n                    value={this.state.rollno}\r\n                    onChange={event =>\r\n                      this.setState({ rollno: event.target.value })\r\n                    }\r\n                  />\r\n                  <Button positive style={{ marginLeft: \"10px\" }}>\r\n                    Submit\r\n                  </Button>\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form onSubmit={this.changeBranch}>\r\n                <Form.Field inline>\r\n                  <label>Branch :</label>\r\n                  <Input\r\n                    value={this.state.branch}\r\n                    onChange={event =>\r\n                      this.setState({ branch: event.target.value })\r\n                    }\r\n                  />\r\n                  <Button positive style={{ marginLeft: \"10px\" }}>\r\n                    Submit\r\n                  </Button>\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form onSubmit={this.changeDob}>\r\n                <Form.Field inline>\r\n                  <label>Date of Birth :</label>\r\n                  <Input\r\n                    value={this.state.dob}\r\n                    onChange={event =>\r\n                      this.setState({ dob: event.target.value })\r\n                    }\r\n                  />\r\n                  <Button positive style={{ marginLeft: \"10px\" }}>\r\n                    Submit\r\n                  </Button>\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form onSubmit={this.changeBloodGp}>\r\n                <Form.Field inline>\r\n                  <label>Blood Group :</label>\r\n                  <Input\r\n                    value={this.state.bloodGp}\r\n                    onChange={event =>\r\n                      this.setState({ bloodGp: event.target.value })\r\n                    }\r\n                  />\r\n                  <Button positive style={{ marginLeft: \"10px\" }}>\r\n                    Submit\r\n                  </Button>\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form onSubmit={this.left}>\r\n                <Button positive style={{ marginTop: \"10px\" }} negative>\r\n                  LEFT!!!!\r\n                </Button>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default change;\r\n"]},"metadata":{},"sourceType":"module"}