{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport web3 from \"../ethereum/web3\";\nimport { Input, Form, Button } from \"semantic-ui-react\";\nimport Layout from \"../components/layout\";\nimport ait from \"../ethereum/Ait\";\n\nvar register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(register, _Component);\n\n  function register() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(register)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      regno: 0,\n      name: \" \",\n      rollno: 0,\n      branch: \" \"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee() {\n      var accounts, manager;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 3:\n              accounts = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(ait.methods.manager().send({\n                from: accounts[0]\n              }));\n\n            case 6:\n              manager = _context.sent;\n              console.log(accounts);\n              console.log(manager);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(register, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(Form, {\n        onSubmit: this.onSubmit\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Registration No\"), __jsx(Input, {\n        value: this.state.regno,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            regno: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Name\"), __jsx(Input, {\n        value: this.state.name,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            name: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Roll No\"), __jsx(Input, {\n        value: this.state.rollno,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            rollno: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Branch\"), __jsx(Input, {\n        value: this.state.branch,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            branch: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Date of Birth\"), __jsx(Input, {\n        value: this.state.dob,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            dob: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Blood Group\"), __jsx(Input, {\n        value: this.state.bloodGp,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            bloodGp: event.target.value\n          });\n        }\n      })), __jsx(Button, {\n        type: \"submit\",\n        primary: true\n      }, \"Submit\")));\n    }\n  }]);\n\n  return register;\n}(Component);\n\nexport default register;","map":{"version":3,"sources":["/mnt/d/Cards/pages/register.js"],"names":["React","Component","web3","Input","Form","Button","Layout","ait","register","regno","name","rollno","branch","event","preventDefault","eth","getAccounts","accounts","methods","manager","send","from","console","log","onSubmit","state","setState","target","value","dob","bloodGp"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport web3 from \"../ethereum/web3\";\r\nimport { Input, Form, Button } from \"semantic-ui-react\";\r\nimport Layout from \"../components/layout\";\r\nimport ait from \"../ethereum/Ait\";\r\n\r\nclass register extends Component {\r\n  state = { regno: 0, name: \" \", rollno: 0, branch: \" \" };\r\n  onSubmit = async () => {\r\n    event.preventDefault();\r\n    const accounts = await web3.eth.getAccounts();\r\n    const manager = await ait.methods.manager().send({ from: accounts[0] });\r\n    console.log(accounts);\r\n    console.log(manager);\r\n  };\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Form onSubmit={this.onSubmit}>\r\n          <Form.Field>\r\n            <label>Registration No</label>\r\n            <Input\r\n              value={this.state.regno}\r\n              onChange={event => this.setState({ regno: event.target.value })}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Name</label>\r\n            <Input\r\n              value={this.state.name}\r\n              onChange={event => this.setState({ name: event.target.value })}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Roll No</label>\r\n            <Input\r\n              value={this.state.rollno}\r\n              onChange={event => this.setState({ rollno: event.target.value })}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Branch</label>\r\n            <Input\r\n              value={this.state.branch}\r\n              onChange={event => this.setState({ branch: event.target.value })}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Date of Birth</label>\r\n            <Input\r\n              value={this.state.dob}\r\n              onChange={event => this.setState({ dob: event.target.value })}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Blood Group</label>\r\n            <Input\r\n              value={this.state.bloodGp}\r\n              onChange={event => this.setState({ bloodGp: event.target.value })}\r\n            />\r\n          </Form.Field>\r\n\r\n          <Button type=\"submit\" primary>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default register;\r\n"]},"metadata":{},"sourceType":"module"}