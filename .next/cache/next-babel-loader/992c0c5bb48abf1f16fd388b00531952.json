{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport web3 from \"../ethereum/web3\";\nimport Layout from \"./layout\";\nimport ait from \"../ethereum/Ait\";\nimport { Form, Button, Input, Table } from \"semantic-ui-react\";\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Index)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      regno: \" \",\n      name: \" \",\n      rollno: \"\",\n      branch: \" \",\n      dob: \" \",\n      bloodGp: \"\",\n      isStudent: false,\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(event) {\n      var accounts, student;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault(); // console.log(\"cheacking\");\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 3:\n              accounts = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(ait.methods.student(_this.state.regno).call());\n\n            case 6:\n              student = _context.sent;\n\n              _this.setState({\n                name: student.name,\n                rollno: student.rollno,\n                branch: student.branch,\n                dob: student.dob,\n                bloodGp: student.bloodGp,\n                isStudent: student.isStudent\n              }); // console.log(student.name);\n\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"renderTable\",\n    value: function renderTable() {\n      return __jsx(Table, null, __jsx(Table.Body, null, __jsx(Table.Row, null, __jsx(Table.Cell, null, \"Name\"), __jsx(Table.Cell, null, \"Approved\")), __jsx(Table.Row, null, __jsx(Table.Cell, null, \"Jamie\"), __jsx(Table.Cell, null, \"Approved\")), __jsx(Table.Row, null, __jsx(Table.Cell, null, \"Jill\"), __jsx(Table.Cell, null, \"Denied\"))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // const { student } = this.state;\n      return __jsx(Layout, null, __jsx(\"h1\", null, \"it is index page\"), __jsx(Form, {\n        onSubmit: this.onSubmit\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"regno\"), __jsx(Input, {\n        value: this.state.regno,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            regno: event.target.value\n          });\n        }\n      })), __jsx(Button, {\n        primary: true\n      }, \"Submit\")), this.state.isStudent ? this.renderTable() : __jsx(\"h1\", null, \"The Student is not Register\"));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Index;","map":{"version":3,"sources":["/mnt/d/Cards/pages/index.js"],"names":["React","Component","web3","Layout","ait","Form","Button","Input","Table","Index","regno","name","rollno","branch","dob","bloodGp","isStudent","loading","event","preventDefault","eth","getAccounts","accounts","methods","student","state","call","setState","onSubmit","target","value","renderTable"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,KAA9B,QAA2C,mBAA3C;;IACMC,K;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,KAAK,EAAE,GADD;AAENC,MAAAA,IAAI,EAAE,GAFA;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,MAAM,EAAE,GAJF;AAKNC,MAAAA,GAAG,EAAE,GALC;AAMNC,MAAAA,OAAO,EAAE,EANH;AAONC,MAAAA,SAAS,EAAE,KAPL;AAQNC,MAAAA,OAAO,EAAE;AARH,K;;+DAUG,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACTA,cAAAA,KAAK,CAACC,cAAN,GADS,CAET;;AAFS;AAAA,+CAGcjB,IAAI,CAACkB,GAAL,CAASC,WAAT,EAHd;;AAAA;AAGHC,cAAAA,QAHG;AAAA;AAAA,+CAMalB,GAAG,CAACmB,OAAJ,CAAYC,OAAZ,CAAoB,MAAKC,KAAL,CAAWf,KAA/B,EAAsCgB,IAAtC,EANb;;AAAA;AAMHF,cAAAA,OANG;;AAOT,oBAAKG,QAAL,CAAc;AACZhB,gBAAAA,IAAI,EAAEa,OAAO,CAACb,IADF;AAEZC,gBAAAA,MAAM,EAAEY,OAAO,CAACZ,MAFJ;AAGZC,gBAAAA,MAAM,EAAEW,OAAO,CAACX,MAHJ;AAIZC,gBAAAA,GAAG,EAAEU,OAAO,CAACV,GAJD;AAKZC,gBAAAA,OAAO,EAAES,OAAO,CAACT,OALL;AAMZC,gBAAAA,SAAS,EAAEQ,OAAO,CAACR;AANP,eAAd,EAPS,CAeT;;;AAfS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;kCAkBG;AACZ,aACE,MAAC,KAAD,QACE,MAAC,KAAD,CAAO,IAAP,QACE,MAAC,KAAD,CAAO,GAAP,QACE,MAAC,KAAD,CAAO,IAAP,eADF,EAEE,MAAC,KAAD,CAAO,IAAP,mBAFF,CADF,EAKE,MAAC,KAAD,CAAO,GAAP,QACE,MAAC,KAAD,CAAO,IAAP,gBADF,EAEE,MAAC,KAAD,CAAO,IAAP,mBAFF,CALF,EASE,MAAC,KAAD,CAAO,GAAP,QACE,MAAC,KAAD,CAAO,IAAP,eADF,EAEE,MAAC,KAAD,CAAO,IAAP,iBAFF,CATF,CADF,CADF;AAkBD;;;6BACQ;AAAA;;AACP;AACA,aACE,MAAC,MAAD,QACE,qCADF,EAEE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKY;AAArB,SACE,MAAC,IAAD,CAAM,KAAN,QACE,6BADF,EAEE,MAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWf,KADpB;AAEE,QAAA,QAAQ,EAAE,kBAAAQ,KAAK;AAAA,iBAAI,MAAI,CAACS,QAAL,CAAc;AAAEjB,YAAAA,KAAK,EAAEQ,KAAK,CAACW,MAAN,CAAaC;AAAtB,WAAd,CAAJ;AAAA;AAFjB,QAFF,CADF,EAQE,MAAC,MAAD;AAAQ,QAAA,OAAO;AAAf,kBARF,CAFF,EAYG,KAAKL,KAAL,CAAWT,SAAX,GACC,KAAKe,WAAL,EADD,GAGC,gDAfJ,CADF;AAoBD;;;;EAvEiB9B,S;;AA0EpB,eAAeQ,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport web3 from \"../ethereum/web3\";\r\nimport Layout from \"./layout\";\r\nimport ait from \"../ethereum/Ait\";\r\nimport { Form, Button, Input, Table } from \"semantic-ui-react\";\r\nclass Index extends Component {\r\n  state = {\r\n    regno: \" \",\r\n    name: \" \",\r\n    rollno: \"\",\r\n    branch: \" \",\r\n    dob: \" \",\r\n    bloodGp: \"\",\r\n    isStudent: false,\r\n    loading: false\r\n  };\r\n  onSubmit = async event => {\r\n    event.preventDefault();\r\n    // console.log(\"cheacking\");\r\n    const accounts = await web3.eth.getAccounts();\r\n    // console.log(accounts[0]);\r\n\r\n    const student = await ait.methods.student(this.state.regno).call();\r\n    this.setState({\r\n      name: student.name,\r\n      rollno: student.rollno,\r\n      branch: student.branch,\r\n      dob: student.dob,\r\n      bloodGp: student.bloodGp,\r\n      isStudent: student.isStudent\r\n    });\r\n    // console.log(student.name);\r\n  };\r\n\r\n  renderTable() {\r\n    return (\r\n      <Table>\r\n        <Table.Body>\r\n          <Table.Row>\r\n            <Table.Cell>Name</Table.Cell>\r\n            <Table.Cell>Approved</Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>Jamie</Table.Cell>\r\n            <Table.Cell>Approved</Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>Jill</Table.Cell>\r\n            <Table.Cell>Denied</Table.Cell>\r\n          </Table.Row>\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n  render() {\r\n    // const { student } = this.state;\r\n    return (\r\n      <Layout>\r\n        <h1>it is index page</h1>\r\n        <Form onSubmit={this.onSubmit}>\r\n          <Form.Field>\r\n            <label>regno</label>\r\n            <Input\r\n              value={this.state.regno}\r\n              onChange={event => this.setState({ regno: event.target.value })}\r\n            />\r\n          </Form.Field>\r\n          <Button primary>Submit</Button>\r\n        </Form>\r\n        {this.state.isStudent ? (\r\n          this.renderTable()\r\n        ) : (\r\n          <h1>The Student is not Register</h1>\r\n        )}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}