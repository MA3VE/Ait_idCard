{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Form, Grid, Input, Button } from \"semantic-ui-react\";\nimport Layout from \"./layout\";\nimport web3 from \"../ethereum/web3\";\nimport ait from \"../ethereum/Ait\";\n\nvar change =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(change, _Component);\n\n  function change() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, change);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(change)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      name: \"\",\n      rollno: 0,\n      branch: \"\",\n      regno: 0,\n      dob: \"\",\n      bloodGp: \" \"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeName\", function _callee() {\n      var accounts;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 2:\n              accounts = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(ait.methods.changeName(_this.state.name, _this.state.regno).send({\n                from: accounts[0]\n              }));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeRollNo\", function _callee2() {\n      var accounts;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 2:\n              accounts = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(ait.methods.changeRollno(_this.state.rollno, _this.state.regno).send({\n                from: accounts[0]\n              }));\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeBranch\", function _callee3() {\n      var accounts;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 2:\n              accounts = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(ait.methods.changeBranch(_this.state.branch, _this.state.regno).send({\n                from: accounts[0]\n              }));\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeDob\", function _callee4() {\n      var accounts;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 2:\n              accounts = _context4.sent;\n              _context4.next = 5;\n              return _regeneratorRuntime.awrap(ait.methods.changeDob(_this.state.dob, _this.state.regno).send({\n                from: accounts[0]\n              }));\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"changeBloodGp\", function _callee5() {\n      var accounts;\n      return _regeneratorRuntime.async(function _callee5$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 2:\n              accounts = _context6.sent;\n              _context6.next = 5;\n              return _regeneratorRuntime.awrap(ait.methods.changeBloodGp(_this.state.bloodGp, _this.state.regno).send({\n                from: accounts[0]\n              }));\n\n            case 5:\n              left = function left() {\n                var accounts;\n                return _regeneratorRuntime.async(function left$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        _context5.next = 2;\n                        return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n                      case 2:\n                        accounts = _context5.sent;\n                        _context5.next = 5;\n                        return _regeneratorRuntime.awrap(ait.methods.left(_this.state.bloodGp, _this.state.regno).send({\n                          from: accounts[0]\n                        }));\n\n                      case 5:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                });\n              };\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(change, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Form, null, __jsx(Form.Field, {\n        inline: true\n      }, __jsx(\"label\", null, \"Reg No. \"), __jsx(Input, {\n        value: this.state.regno,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            regno: event.target.value\n          });\n        }\n      })))), __jsx(Grid.Row, null, __jsx(Form, {\n        onSubmit: this.changeName\n      }, __jsx(Form.Field, {\n        inline: true\n      }, __jsx(\"label\", null, \"Name\"), __jsx(Input, {\n        value: this.state.name,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            name: event.target.value\n          });\n        }\n      }), __jsx(Button, {\n        positive: true,\n        style: {\n          marginLeft: \"10px\"\n        }\n      }, \"Submit\")))), __jsx(Grid.Row, null, __jsx(Form, {\n        onSubmit: this.changeRollNo\n      }, __jsx(Form.Field, {\n        inline: true\n      }, __jsx(\"label\", null, \"Roll No\"), __jsx(Input, {\n        value: this.state.rollno,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            rollno: event.target.value\n          });\n        }\n      }), __jsx(Button, {\n        positive: true,\n        style: {\n          marginLeft: \"10px\"\n        }\n      }, \"Submit\")))), __jsx(Grid.Row, null, __jsx(Form, {\n        onSubmit: this.changeBranch\n      }, __jsx(Form.Field, {\n        inline: true\n      }, __jsx(\"label\", null, \"Branch\"), __jsx(Input, {\n        value: this.state.branch,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            branch: event.target.value\n          });\n        }\n      }), __jsx(Button, {\n        positive: true,\n        style: {\n          marginLeft: \"10px\"\n        }\n      }, \"Submit\")))), __jsx(Grid.Row, null, __jsx(Form, {\n        onSubmit: this.changeDob\n      }, __jsx(Form.Field, {\n        inline: true\n      }, __jsx(\"label\", null, \"Date of Birth\"), __jsx(Input, {\n        value: this.state.dob,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            dob: event.target.value\n          });\n        }\n      }), __jsx(Button, {\n        positive: true,\n        style: {\n          marginLeft: \"10px\"\n        }\n      }, \"Submit\")))), __jsx(Grid.Row, null, __jsx(Form, {\n        onSubmit: this.changeBloodGp\n      }, __jsx(Form.Field, {\n        inline: true\n      }, __jsx(\"label\", null, \"Blood Group\"), __jsx(Input, {\n        value: this.state.bloodGp,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            bloodGp: event.target.value\n          });\n        }\n      }), __jsx(Button, {\n        positive: true,\n        style: {\n          marginLeft: \"10px\"\n        }\n      }, \"Submit\")))), __jsx(Grid.Row, null, __jsx(Form, {\n        onSubmit: this.left\n      }, __jsx(Button, {\n        positive: true,\n        style: {\n          marginTop: \"10px\"\n        },\n        negative: true\n      }, \"LEFT!!!!\")))));\n    }\n  }]);\n\n  return change;\n}(Component);\n\nexport default change;","map":{"version":3,"sources":["/mnt/d/Cards/pages/update.js"],"names":["React","Component","Form","Grid","Input","Button","Layout","web3","ait","change","name","rollno","branch","regno","dob","bloodGp","eth","getAccounts","accounts","methods","changeName","state","send","from","changeRollno","changeBranch","changeDob","changeBloodGp","left","event","setState","target","value","marginLeft","changeRollNo","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Grid, Input, Button } from \"semantic-ui-react\";\r\nimport Layout from \"./layout\";\r\nimport web3 from \"../ethereum/web3\";\r\nimport ait from \"../ethereum/Ait\";\r\n\r\nclass change extends Component {\r\n  state = { name: \"\", rollno: 0, branch: \"\", regno: 0, dob: \"\", bloodGp: \" \" };\r\n  changeName = async () => {\r\n    const accounts = await web3.eth.getAccounts();\r\n    await ait.methods\r\n      .changeName(this.state.name, this.state.regno)\r\n      .send({ from: accounts[0] });\r\n    // console.log(this.state.regno);\r\n  };\r\n  changeRollNo = async () => {\r\n    const accounts = await web3.eth.getAccounts();\r\n    await ait.methods\r\n      .changeRollno(this.state.rollno, this.state.regno)\r\n      .send({ from: accounts[0] });\r\n  };\r\n  changeBranch = async () => {\r\n    const accounts = await web3.eth.getAccounts();\r\n    await ait.methods\r\n      .changeBranch(this.state.branch, this.state.regno)\r\n      .send({ from: accounts[0] });\r\n  };\r\n  changeDob = async () => {\r\n    const accounts = await web3.eth.getAccounts();\r\n    await ait.methods\r\n      .changeDob(this.state.dob, this.state.regno)\r\n      .send({ from: accounts[0] });\r\n  };\r\n  changeBloodGp = async () => {\r\n    const accounts = await web3.eth.getAccounts();\r\n    await ait.methods\r\n      .changeBloodGp(this.state.bloodGp, this.state.regno)\r\n      .send({ from: accounts[0] });\r\n    left = async () => {\r\n      const accounts = await web3.eth.getAccounts();\r\n      await ait.methods\r\n        .left(this.state.bloodGp, this.state.regno)\r\n        .send({ from: accounts[0] });\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Form>\r\n              <Form.Field inline>\r\n                <label>Reg No. </label>\r\n                <Input\r\n                  value={this.state.regno}\r\n                  onChange={event =>\r\n                    this.setState({ regno: event.target.value })\r\n                  }\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Form onSubmit={this.changeName}>\r\n              <Form.Field inline>\r\n                <label>Name</label>\r\n                <Input\r\n                  value={this.state.name}\r\n                  onChange={event =>\r\n                    this.setState({ name: event.target.value })\r\n                  }\r\n                />\r\n                <Button positive style={{ marginLeft: \"10px\" }}>\r\n                  Submit\r\n                </Button>\r\n              </Form.Field>\r\n            </Form>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Form onSubmit={this.changeRollNo}>\r\n              <Form.Field inline>\r\n                <label>Roll No</label>\r\n                <Input\r\n                  value={this.state.rollno}\r\n                  onChange={event =>\r\n                    this.setState({ rollno: event.target.value })\r\n                  }\r\n                />\r\n                <Button positive style={{ marginLeft: \"10px\" }}>\r\n                  Submit\r\n                </Button>\r\n              </Form.Field>\r\n            </Form>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Form onSubmit={this.changeBranch}>\r\n              <Form.Field inline>\r\n                <label>Branch</label>\r\n                <Input\r\n                  value={this.state.branch}\r\n                  onChange={event =>\r\n                    this.setState({ branch: event.target.value })\r\n                  }\r\n                />\r\n                <Button positive style={{ marginLeft: \"10px\" }}>\r\n                  Submit\r\n                </Button>\r\n              </Form.Field>\r\n            </Form>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Form onSubmit={this.changeDob}>\r\n              <Form.Field inline>\r\n                <label>Date of Birth</label>\r\n                <Input\r\n                  value={this.state.dob}\r\n                  onChange={event => this.setState({ dob: event.target.value })}\r\n                />\r\n                <Button positive style={{ marginLeft: \"10px\" }}>\r\n                  Submit\r\n                </Button>\r\n              </Form.Field>\r\n            </Form>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Form onSubmit={this.changeBloodGp}>\r\n              <Form.Field inline>\r\n                <label>Blood Group</label>\r\n                <Input\r\n                  value={this.state.bloodGp}\r\n                  onChange={event =>\r\n                    this.setState({ bloodGp: event.target.value })\r\n                  }\r\n                />\r\n                <Button positive style={{ marginLeft: \"10px\" }}>\r\n                  Submit\r\n                </Button>\r\n              </Form.Field>\r\n            </Form>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Form onSubmit={this.left}>\r\n              <Button positive style={{ marginTop: \"10px\" }} negative>\r\n                LEFT!!!!\r\n              </Button>\r\n            </Form>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default change;\r\n"]},"metadata":{},"sourceType":"module"}