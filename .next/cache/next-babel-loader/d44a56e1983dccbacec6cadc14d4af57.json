{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport web3 from \"../ethereum/web3\";\nimport { Input } from \"semantic-ui-react\";\n\nclass register extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      regno: 0,\n      name: \" \",\n      rollno: 0\n    });\n  }\n\n  render() {\n    return __jsx(Form, null, __jsx(Form.Field, null, __jsx(\"label\", null, \"Registration No\"), __jsx(Input, {\n      value: this.state.regno,\n      onChange: event => this.setState({\n        regno: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Name\"), __jsx(Input, {\n      value: this.state.name,\n      onChange: event => this.setState({\n        name: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Roll No\"), __jsx(Input, {\n      value: this.state.rollno,\n      onChange: event => this.setState({\n        rollno: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Branch\"), __jsx(Input, {\n      value: this.state.branch,\n      onChange: event => this.setState({\n        branch: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Date of Birth\"), __jsx(Input, {\n      value: this.state.dob,\n      onChange: event => this.setState({\n        dob: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Blood Group\"), __jsx(Input, {\n      value: this.state.bloodGp,\n      onChange: event => this.setState({\n        bloodGp: event.target.value\n      })\n    })), __jsx(Button, {\n      type: \"submit\"\n    }, \"Submit\"));\n  }\n\n}\n\nexport default register;","map":{"version":3,"sources":["/mnt/d/Cards/pages/register.js"],"names":["React","Component","web3","Input","register","regno","name","rollno","render","state","event","setState","target","value","branch","dob","bloodGp"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,KAAT,QAAsB,mBAAtB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;;AAAA,mCACvB;AAAEI,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,IAAI,EAAE,GAAlB;AAAuBC,MAAAA,MAAM,EAAE;AAA/B,KADuB;AAAA;;AAG/BC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,KAAN,QACE,uCADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWJ,KADpB;AAEE,MAAA,QAAQ,EAAEK,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAAtB,OAAd;AAFrB,MAFF,CADF,EAQE,MAAC,IAAD,CAAM,KAAN,QACE,4BADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWH,IADpB;AAEE,MAAA,QAAQ,EAAEI,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAArB,OAAd;AAFrB,MAFF,CARF,EAeE,MAAC,IAAD,CAAM,KAAN,QACE,+BADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWF,MADpB;AAEE,MAAA,QAAQ,EAAEG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAAvB,OAAd;AAFrB,MAFF,CAfF,EAsBE,MAAC,IAAD,CAAM,KAAN,QACE,8BADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWK,MADpB;AAEE,MAAA,QAAQ,EAAEJ,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAEG,QAAAA,MAAM,EAAEJ,KAAK,CAACE,MAAN,CAAaC;AAAvB,OAAd;AAFrB,MAFF,CAtBF,EA6BE,MAAC,IAAD,CAAM,KAAN,QACE,qCADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWM,GADpB;AAEE,MAAA,QAAQ,EAAEL,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAEI,QAAAA,GAAG,EAAEL,KAAK,CAACE,MAAN,CAAaC;AAApB,OAAd;AAFrB,MAFF,CA7BF,EAoCE,MAAC,IAAD,CAAM,KAAN,QACE,mCADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWO,OADpB;AAEE,MAAA,QAAQ,EAAEN,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAEK,QAAAA,OAAO,EAAEN,KAAK,CAACE,MAAN,CAAaC;AAAxB,OAAd;AAFrB,MAFF,CApCF,EA4CE,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb,gBA5CF,CADF;AAgDD;;AApD8B;;AAuDjC,eAAeT,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport web3 from \"../ethereum/web3\";\r\nimport { Input } from \"semantic-ui-react\";\r\n\r\nclass register extends Component {\r\n  state = { regno: 0, name: \" \", rollno: 0 };\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Field>\r\n          <label>Registration No</label>\r\n          <Input\r\n            value={this.state.regno}\r\n            onChange={event => this.setState({ regno: event.target.value })}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Name</label>\r\n          <Input\r\n            value={this.state.name}\r\n            onChange={event => this.setState({ name: event.target.value })}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Roll No</label>\r\n          <Input\r\n            value={this.state.rollno}\r\n            onChange={event => this.setState({ rollno: event.target.value })}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Branch</label>\r\n          <Input\r\n            value={this.state.branch}\r\n            onChange={event => this.setState({ branch: event.target.value })}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Date of Birth</label>\r\n          <Input\r\n            value={this.state.dob}\r\n            onChange={event => this.setState({ dob: event.target.value })}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Blood Group</label>\r\n          <Input\r\n            value={this.state.bloodGp}\r\n            onChange={event => this.setState({ bloodGp: event.target.value })}\r\n          />\r\n        </Form.Field>\r\n\r\n        <Button type=\"submit\">Submit</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default register;\r\n"]},"metadata":{},"sourceType":"module"}