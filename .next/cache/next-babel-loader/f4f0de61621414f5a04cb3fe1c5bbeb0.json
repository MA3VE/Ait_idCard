{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport web3 from \"../ethereum/web3\";\nimport { Input, Form, Button } from \"semantic-ui-react\";\nimport Layout from \"../components/layout\";\nimport ait from \"../ethereum/Ait\";\n\nvar register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(register, _Component);\n\n  function register() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(register)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      regno: 0,\n      name: \" \",\n      rollno: 0,\n      branch: \" \",\n      errmsg: \"\",\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee() {\n      var accounts;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState({\n                loading: true,\n                errmsg: \"\"\n              });\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 4:\n              accounts = _context.sent;\n\n              // const manager = await ait.methods.manager().call();\n              try {} catch (err) {}\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(register, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(Form, {\n        onSubmit: this.onSubmit\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Registration No\"), __jsx(Input, {\n        value: this.state.regno,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            regno: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Name\"), __jsx(Input, {\n        value: this.state.name,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            name: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Roll No\"), __jsx(Input, {\n        value: this.state.rollno,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            rollno: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Branch\"), __jsx(Input, {\n        value: this.state.branch,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            branch: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Date of Birth\"), __jsx(Input, {\n        value: this.state.dob,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            dob: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Blood Group\"), __jsx(Input, {\n        value: this.state.bloodGp,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            bloodGp: event.target.value\n          });\n        }\n      })), __jsx(Button, {\n        type: \"submit\",\n        primary: true\n      }, \"Submit\")));\n    }\n  }]);\n\n  return register;\n}(Component);\n\nexport default register;","map":{"version":3,"sources":["/mnt/d/Cards/pages/register.js"],"names":["React","Component","web3","Input","Form","Button","Layout","ait","register","regno","name","rollno","branch","errmsg","loading","event","preventDefault","setState","eth","getAccounts","accounts","err","onSubmit","state","target","value","dob","bloodGp"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport web3 from \"../ethereum/web3\";\r\nimport { Input, Form, Button } from \"semantic-ui-react\";\r\nimport Layout from \"../components/layout\";\r\nimport ait from \"../ethereum/Ait\";\r\n\r\nclass register extends Component {\r\n  state = {\r\n    regno: 0,\r\n    name: \" \",\r\n    rollno: 0,\r\n    branch: \" \",\r\n    errmsg: \"\",\r\n    loading: false\r\n  };\r\n  onSubmit = async () => {\r\n    event.preventDefault();\r\n    this.setState({ loading: true, errmsg: \"\" });\r\n    const accounts = await web3.eth.getAccounts();\r\n    // const manager = await ait.methods.manager().call();\r\n    try {\r\n    } catch (err) {}\r\n  };\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Form onSubmit={this.onSubmit}>\r\n          <Form.Field>\r\n            <label>Registration No</label>\r\n            <Input\r\n              value={this.state.regno}\r\n              onChange={event => this.setState({ regno: event.target.value })}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Name</label>\r\n            <Input\r\n              value={this.state.name}\r\n              onChange={event => this.setState({ name: event.target.value })}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Roll No</label>\r\n            <Input\r\n              value={this.state.rollno}\r\n              onChange={event => this.setState({ rollno: event.target.value })}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Branch</label>\r\n            <Input\r\n              value={this.state.branch}\r\n              onChange={event => this.setState({ branch: event.target.value })}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Date of Birth</label>\r\n            <Input\r\n              value={this.state.dob}\r\n              onChange={event => this.setState({ dob: event.target.value })}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Blood Group</label>\r\n            <Input\r\n              value={this.state.bloodGp}\r\n              onChange={event => this.setState({ bloodGp: event.target.value })}\r\n            />\r\n          </Form.Field>\r\n\r\n          <Button type=\"submit\" primary>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default register;\r\n"]},"metadata":{},"sourceType":"module"}