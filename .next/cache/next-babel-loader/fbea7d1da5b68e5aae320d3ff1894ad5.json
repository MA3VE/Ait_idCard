{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Grid, Input, Button } from \"semantic-ui-react\";\nimport Layout from \"./layout\";\nimport web3 from \"../ethereum/web3\";\nimport ait from \"../ethereum/Ait\";\n\nclass change extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      name: \"\",\n      rollno: 0,\n      branch: \"\",\n      regno: 0,\n      dob: \"\",\n      bloodGp: \" \"\n    });\n\n    _defineProperty(this, \"changeName\", async () => {\n      const accounts = await web3.eth.getAccounts(name, regno);\n      await ait.methods.changeName().send({\n        from: accounts[0]\n      });\n    });\n\n    _defineProperty(this, \"changeRollNo\", async () => {});\n\n    _defineProperty(this, \"changeBranch\", async () => {});\n\n    _defineProperty(this, \"changeDob\", async () => {});\n\n    _defineProperty(this, \"changeBloodGp\", async () => {});\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Form, null, __jsx(Form.Field, {\n      inline: true\n    }, __jsx(\"label\", null, \"Reg No. \"), __jsx(Input, {\n      value: this.state.name,\n      onChange: event => this.setState({\n        name: event.target.regno\n      })\n    })))), __jsx(Grid.Row, null, __jsx(Form, {\n      onSubmit: this.changeName\n    }, __jsx(Form.Field, {\n      inline: true\n    }, __jsx(\"label\", null, \"Name\"), __jsx(Input, {\n      value: this.state.name,\n      onChange: event => this.setState({\n        name: event.target.value\n      })\n    }), __jsx(Button, {\n      style: {\n        marginLeft: \"10px\"\n      }\n    }, \"Submit\")))), __jsx(Grid.Row, null, __jsx(Form, {\n      onSubmit: this.changeRollNo\n    }, __jsx(Form.Field, {\n      inline: true\n    }, __jsx(\"label\", null, \"Roll No\"), __jsx(Input, {\n      value: this.state.rollno,\n      onChange: event => this.setState({\n        rollno: event.target.value\n      })\n    }), __jsx(Button, {\n      style: {\n        marginLeft: \"10px\"\n      }\n    }, \"Submit\")))), __jsx(Grid.Row, null, __jsx(Form, {\n      onSubmit: this.changeBranch\n    }, __jsx(Form.Field, {\n      inline: true\n    }, __jsx(\"label\", null, \"Branch\"), __jsx(Input, {\n      value: this.state.branch,\n      onChange: event => this.setState({\n        branch: event.target.value\n      })\n    }), __jsx(Button, {\n      style: {\n        marginLeft: \"10px\"\n      }\n    }, \"Submit\")))), __jsx(Grid.Row, null, __jsx(Form, {\n      onSubmit: this.changeDob\n    }, __jsx(Form.Field, {\n      inline: true\n    }, __jsx(\"label\", null, \"Date of Birth\"), __jsx(Input, {\n      value: this.state.dob,\n      onChange: event => this.setState({\n        dob: event.target.value\n      })\n    }), __jsx(Button, {\n      style: {\n        marginLeft: \"10px\"\n      }\n    }, \"Submit\")))), __jsx(Grid.Row, null, __jsx(Form, {\n      onSubmit: this.changeBloodGp\n    }, __jsx(Form.Field, {\n      inline: true\n    }, __jsx(\"label\", null, \"Blood Group\"), __jsx(Input, {\n      value: this.state.bloodGp,\n      onChange: event => this.setState({\n        bloodGp: event.target.value\n      })\n    }), __jsx(Button, {\n      style: {\n        marginLeft: \"10px\"\n      }\n    }, \"Submit\"))))));\n  }\n\n}\n\nexport default change;","map":{"version":3,"sources":["/mnt/d/Cards/pages/update.js"],"names":["React","Component","Form","Grid","Input","Button","Layout","web3","ait","change","name","rollno","branch","regno","dob","bloodGp","accounts","eth","getAccounts","methods","changeName","send","from","render","state","event","setState","target","value","marginLeft","changeRollNo","changeBranch","changeDob","changeBloodGp"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Grid, Input, Button } from \"semantic-ui-react\";\r\nimport Layout from \"./layout\";\r\nimport web3 from \"../ethereum/web3\";\r\nimport ait from \"../ethereum/Ait\";\r\n\r\nclass change extends Component {\r\n  state = { name: \"\", rollno: 0, branch: \"\", regno: 0, dob: \"\", bloodGp: \" \" };\r\n  changeName = async () => {\r\n    const accounts = await web3.eth.getAccounts(name, regno);\r\n    await ait.methods.changeName().send({ from: accounts[0] });\r\n  };\r\n  changeRollNo = async () => {};\r\n  changeBranch = async () => {};\r\n  changeDob = async () => {};\r\n  changeBloodGp = async () => {};\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Form>\r\n              <Form.Field inline>\r\n                <label>Reg No. </label>\r\n                <Input\r\n                  value={this.state.name}\r\n                  onChange={event =>\r\n                    this.setState({ name: event.target.regno })\r\n                  }\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Form onSubmit={this.changeName}>\r\n              <Form.Field inline>\r\n                <label>Name</label>\r\n                <Input\r\n                  value={this.state.name}\r\n                  onChange={event =>\r\n                    this.setState({ name: event.target.value })\r\n                  }\r\n                />\r\n                <Button style={{ marginLeft: \"10px\" }}>Submit</Button>\r\n              </Form.Field>\r\n            </Form>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Form onSubmit={this.changeRollNo}>\r\n              <Form.Field inline>\r\n                <label>Roll No</label>\r\n                <Input\r\n                  value={this.state.rollno}\r\n                  onChange={event =>\r\n                    this.setState({ rollno: event.target.value })\r\n                  }\r\n                />\r\n                <Button style={{ marginLeft: \"10px\" }}>Submit</Button>\r\n              </Form.Field>\r\n            </Form>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Form onSubmit={this.changeBranch}>\r\n              <Form.Field inline>\r\n                <label>Branch</label>\r\n                <Input\r\n                  value={this.state.branch}\r\n                  onChange={event =>\r\n                    this.setState({ branch: event.target.value })\r\n                  }\r\n                />\r\n                <Button style={{ marginLeft: \"10px\" }}>Submit</Button>\r\n              </Form.Field>\r\n            </Form>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Form onSubmit={this.changeDob}>\r\n              <Form.Field inline>\r\n                <label>Date of Birth</label>\r\n                <Input\r\n                  value={this.state.dob}\r\n                  onChange={event => this.setState({ dob: event.target.value })}\r\n                />\r\n                <Button style={{ marginLeft: \"10px\" }}>Submit</Button>\r\n              </Form.Field>\r\n            </Form>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Form onSubmit={this.changeBloodGp}>\r\n              <Form.Field inline>\r\n                <label>Blood Group</label>\r\n                <Input\r\n                  value={this.state.bloodGp}\r\n                  onChange={event =>\r\n                    this.setState({ bloodGp: event.target.value })\r\n                  }\r\n                />\r\n                <Button style={{ marginLeft: \"10px\" }}>Submit</Button>\r\n              </Form.Field>\r\n            </Form>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default change;\r\n"]},"metadata":{},"sourceType":"module"}