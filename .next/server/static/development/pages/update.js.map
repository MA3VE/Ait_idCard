{"version":3,"file":"static/development/pages/update.js","sources":["webpack:///webpack/bootstrap","webpack:///./ethereum/Ait.js","webpack:///./ethereum/web3.js","webpack:///./pages/layout.js","webpack:///./pages/update.js","webpack:///./routes.js","webpack:///external \"next-routes\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"semantic-ui-react\"","webpack:///external \"web3\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import web3 from \"./web3\";\r\nimport Ait from \"./build/contracts/Ait.json\";\r\n\r\nconst instance = new web3.eth.Contract(\r\n  Ait.abi,\r\n  \"0xb468d7b2F6d3CaD9B4071e0168e338038ecA38C1\"\r\n);\r\nexport default instance;\r\n","import Web3 from \"web3\";\r\n\r\nlet web3;\r\n\r\nif (typeof window !== \"undefined\" && typeof window.web3 !== \"undefined\") {\r\n  web3 = new Web3(window.web3.currentProvider);\r\n} else {\r\n  const provider = new Web3.providers.HttpProvider(\r\n    \"https://rinkeby.infura.io/v3/bfaa72602e8f4e4aa183874c9c667d35\"\r\n  );\r\n  web3 = new Web3(provider);\r\n}\r\n\r\nexport default web3;\r\n","import React, { Component } from \"react\";\r\nimport { Menu, Container } from \"semantic-ui-react\";\r\nimport Head from \"next/head\";\r\nimport { Link } from \"../routes\";\r\nclass Layout extends Component {\r\n  // state = {  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Head>\r\n          <link\r\n            rel=\"stylesheet\"\r\n            href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\r\n          />\r\n        </Head>\r\n        <Menu style={{ marginTop: \"10px\" }}>\r\n          <Link route={`/`}>\r\n            <a className=\"item\">Ait</a>\r\n          </Link>\r\n          <Menu.Menu position=\"right\" header=\"true\">\r\n            <Link route={`/register`}>\r\n              <a className=\"item\">Register</a>\r\n            </Link>\r\n\r\n            <Link route={`/update`}>\r\n              <a className=\"item\">Update</a>\r\n            </Link>\r\n          </Menu.Menu>\r\n        </Menu>\r\n        {this.props.children}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Grid, Input, Button, Message } from \"semantic-ui-react\";\r\nimport Layout from \"./layout\";\r\nimport web3 from \"../ethereum/web3\";\r\nimport ait from \"../ethereum/Ait\";\r\n\r\nclass change extends Component {\r\n  state = {\r\n    name: \"\",\r\n    rollno: \"\",\r\n    branch: \"\",\r\n    regno: \"\",\r\n    dob: \"\",\r\n    bloodGp: \" \",\r\n    nloading: false,\r\n    rloading: false,\r\n    bloading: false,\r\n    dloading: false,\r\n    gloading: false,\r\n    lloading: false,\r\n    nerrmsg: \"\",\r\n    rerrmsg: \"\",\r\n    berrmsg: \"\",\r\n    derrmsg: \"\",\r\n    gerrmsg: \"\",\r\n    lerrmsg: \"\"\r\n  };\r\n  changeName = async () => {\r\n    this.setState({ nloading: true, nerrmsg: \"\" });\r\n    try {\r\n      const accounts = await web3.eth.getAccounts();\r\n      await ait.methods\r\n        .changeName(this.state.name, this.state.regno)\r\n        .send({ from: accounts[0] });\r\n      // console.log(this.state.regno);\r\n    } catch (error) {\r\n      this.setState({ nerrmsg: error.message });\r\n    }\r\n    this.setState({ nloading: false });\r\n  };\r\n\r\n  changeRollNo = async () => {\r\n    this.setState({ rloading: true, rerrmsg: \"\" });\r\n    try {\r\n      const accounts = await web3.eth.getAccounts();\r\n      await ait.methods\r\n        .changeRollno(this.state.rollno, this.state.regno)\r\n        .send({ from: accounts[0] });\r\n    } catch (error) {\r\n      this.setState({ rerrmsg: error.message });\r\n    }\r\n    this.setState({ rloading: false });\r\n  };\r\n\r\n  changeBranch = async () => {\r\n    this.setState({ bloading: true, berrmsg: \"\" });\r\n    try {\r\n      const accounts = await web3.eth.getAccounts();\r\n      await ait.methods\r\n        .changeBranch(this.state.branch, this.state.regno)\r\n        .send({ from: accounts[0] });\r\n    } catch (error) {\r\n      this.setState({ berrmsg: error.message });\r\n    }\r\n    this.setState({ bloading: false });\r\n  };\r\n\r\n  changeDob = async () => {\r\n    this.setState({ dloading: true, derrmsg: \"\" });\r\n    try {\r\n      const accounts = await web3.eth.getAccounts();\r\n      await ait.methods\r\n        .changeDob(this.state.dob, this.state.regno)\r\n        .send({ from: accounts[0] });\r\n    } catch (error) {\r\n      this.setState({ derrmsg: error.message });\r\n    }\r\n\r\n    this.setState({ dloading: false });\r\n  };\r\n\r\n  changeBloodGp = async () => {\r\n    this.setState({ gloading: true, gerrmsg: \"\" });\r\n    try {\r\n      const accounts = await web3.eth.getAccounts();\r\n      await ait.methods\r\n        .changeBloodGp(this.state.bloodGp, this.state.regno)\r\n        .send({ from: accounts[0] });\r\n    } catch (error) {\r\n      this.setState({ gerrmsg: error.message });\r\n    }\r\n\r\n    this.setState({ gloading: false });\r\n  };\r\n\r\n  left = async () => {\r\n    this.setState({ lloading: true, lerrmsg: \"\" });\r\n    try {\r\n      const accounts = await web3.eth.getAccounts();\r\n      await ait.methods.left(this.state.regno).send({ from: accounts[0] });\r\n    } catch (error) {\r\n      this.setState({ lerrmsg: error.message });\r\n    }\r\n    this.setState({ lloading: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form>\r\n                <Form.Field inline>\r\n                  <label>Reg No. </label>\r\n                  <Input\r\n                    value={this.state.regno}\r\n                    onChange={event =>\r\n                      this.setState({ regno: event.target.value })\r\n                    }\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form onSubmit={this.changeName} error={!!this.state.nerrmsg}>\r\n                <Form.Field inline>\r\n                  <label>Name :</label>\r\n                  <Input\r\n                    value={this.state.name}\r\n                    onChange={event =>\r\n                      this.setState({ name: event.target.value })\r\n                    }\r\n                  />\r\n                  <Button\r\n                    positive\r\n                    style={{ marginLeft: \"10px\" }}\r\n                    loading={this.state.nloading}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                  <Message error header=\"oops!\" content={this.state.nerrmsg} />\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form onSubmit={this.changeRollNo} error={!!this.state.rerrmsg}>\r\n                <Form.Field inline>\r\n                  <label>Roll No :</label>\r\n                  <Input\r\n                    value={this.state.rollno}\r\n                    onChange={event =>\r\n                      this.setState({ rollno: event.target.value })\r\n                    }\r\n                  />\r\n                  <Button\r\n                    positive\r\n                    style={{ marginLeft: \"10px\" }}\r\n                    loading={this.state.rloading}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                  <Message error header=\"oops!\" content={this.state.rerrmsg} />\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form onSubmit={this.changeBranch} error={!!this.state.berrmsg}>\r\n                <Form.Field inline>\r\n                  <label>Branch :</label>\r\n                  <Input\r\n                    value={this.state.branch}\r\n                    onChange={event =>\r\n                      this.setState({ branch: event.target.value })\r\n                    }\r\n                  />\r\n                  <Button\r\n                    positive\r\n                    style={{ marginLeft: \"10px\" }}\r\n                    loading={this.state.bloading}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form.Field>\r\n                <Message error header=\"oops!\" content={this.state.berrmsg} />\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form onSubmit={this.changeDob} error={!!this.state.derrmsg}>\r\n                <Form.Field inline>\r\n                  <label>Date of Birth :</label>\r\n                  <Input\r\n                    value={this.state.dob}\r\n                    onChange={event =>\r\n                      this.setState({ dob: event.target.value })\r\n                    }\r\n                  />\r\n                  <Button\r\n                    positive\r\n                    style={{ marginLeft: \"10px\" }}\r\n                    loading={this.state.dloading}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form.Field>\r\n                <Message error header=\"oops!\" content={this.state.derrmsg} />\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form onSubmit={this.changeBloodGp} error={!!this.state.gerrmsg}>\r\n                <Form.Field inline>\r\n                  <label>Blood Group :</label>\r\n                  <Input\r\n                    value={this.state.bloodGp}\r\n                    onChange={event =>\r\n                      this.setState({ bloodGp: event.target.value })\r\n                    }\r\n                  />\r\n                  <Button\r\n                    positive\r\n                    style={{ marginLeft: \"10px\" }}\r\n                    loading={this.state.gloading}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                  <Message error header=\"oops!\" content={this.state.gerrmsg} />\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form onSubmit={this.left} error={!!this.state.lerrmsg}>\r\n                <Message error header=\"oops!\" content={this.state.lerrmsg} />\r\n\r\n                <Button\r\n                  positive\r\n                  style={{ marginTop: \"10px\" }}\r\n                  negative\r\n                  loading={this.state.lloading}\r\n                >\r\n                  LEFT!!!!\r\n                </Button>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default change;\r\n","const routes = require(\"next-routes\")();\r\n\r\nmodule.exports = routes;\r\n","module.exports = require(\"next-routes\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"semantic-ui-react\");","module.exports = require(\"web3\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAIA;;;;;;;;;;;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAEA;AACA;AACA,aAEA;AACA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAOA;AACA;AA7BA;AACA;AA8BA;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AACA;AAFA;AAsBA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAlCA;AAoCA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA/CA;AAiDA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA5DA;AA8DA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AA1EA;AA4EA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAxFA;AA0FA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAlGA;AACA;AAmGA;AACA;AAMA;AAAA;AAGA;AACA;AACA;AAAA;AAHA;AAacA;AACA;AApQA;AACA;AAqQA;;;;;;;;;;;AC5QA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACFA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}