{"version":3,"file":"static/webpack/static/development/pages/register.js.d96d0a41b1c87068ef63.hot-update.js","sources":["webpack:///./pages/register.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport web3 from \"../ethereum/web3\";\r\nimport { Input, Form, Button, Message, Grid } from \"semantic-ui-react\";\r\nimport Layout from \"./layout\";\r\nimport ait from \"../ethereum/Ait\";\r\nimport { Link } from \"../routes\";\r\n\r\nclass register extends Component {\r\n  state = {\r\n    regno: \"\",\r\n    name: \" \",\r\n    rollno: \"\",\r\n    branch: \" \",\r\n    dob: \" \",\r\n    bloodGp: \"\",\r\n    errmsg: \"\",\r\n    loading: false\r\n  };\r\n  onSubmit = async () => {\r\n    event.preventDefault();\r\n    this.setState({ loading: true, errmsg: \"\" });\r\n    const { regno, name, rollno, branch, dob, bloodGp } = this.state;\r\n    const accounts = await web3.eth.getAccounts();\r\n    // console.log(accounts[0]);\r\n    const manager = await ait.methods.manager().call();\r\n    try {\r\n      await ait.methods\r\n        .register(regno, name, rollno, branch, dob, bloodGp)\r\n        .send({ from: accounts[0] });\r\n    } catch (err) {\r\n      this.setState({ errmsg: err.message });\r\n    }\r\n    this.setState({ loading: false });\r\n  };\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Grid>\r\n          <Grid.Row columns={2}>\r\n            <Grid.Column width={13}>\r\n              <Form onSubmit={this.onSubmit} error={!!this.state.errmsg}>\r\n                <Form.Field>\r\n                  <label>Registration No</label>\r\n                  <Input\r\n                    value={this.state.regno}\r\n                    onChange={event =>\r\n                      this.setState({ regno: event.target.value })\r\n                    }\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Name</label>\r\n                  <Input\r\n                    value={this.state.name}\r\n                    onChange={event =>\r\n                      this.setState({ name: event.target.value })\r\n                    }\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Roll No</label>\r\n                  <Input\r\n                    value={this.state.rollno}\r\n                    onChange={event =>\r\n                      this.setState({ rollno: event.target.value })\r\n                    }\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Branch</label>\r\n                  <Input\r\n                    value={this.state.branch}\r\n                    onChange={event =>\r\n                      this.setState({ branch: event.target.value })\r\n                    }\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Date of Birth</label>\r\n                  <Input\r\n                    value={this.state.dob}\r\n                    onChange={event =>\r\n                      this.setState({ dob: event.target.value })\r\n                    }\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Blood Group</label>\r\n                  <Input\r\n                    value={this.state.bloodGp}\r\n                    onChange={event =>\r\n                      this.setState({ bloodGp: event.target.value })\r\n                    }\r\n                  />\r\n                </Form.Field>\r\n                <Message error header=\"opps\" content={this.state.errmsg} />\r\n\r\n                <Button primary loading={this.state.loading}>\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <Link route={`/change`}>\r\n                <a>\r\n                  <Button primary floated=\"right\">\r\n                    Update!!\r\n                  </Button>\r\n                </a>\r\n              </Link>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default register;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AASA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AACA;AADA;AAIA;AAJA;AAAA;AACA;AADA;AAMA;AANA;AAAA;AAAA;AAUA;AAAA;AACA;AAXA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAWA;AAAA;AAAA;AACA;AAbA;AAcA;AAAA;AAAA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAeA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AADA;AAFA;AAUA;AACA;AAAA;AACA;AAAA;AADA;AAFA;AAUA;AACA;AAAA;AACA;AAAA;AADA;AAFA;AAUA;AACA;AAAA;AACA;AAAA;AADA;AAFA;AAUA;AACA;AAAA;AACA;AAAA;AADA;AAFA;AAUA;AACA;AAAA;AACA;AAAA;AADA;AAFA;AAOA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAUA;;;;AA5GA;AACA;AA8GA;;;;A","sourceRoot":""}