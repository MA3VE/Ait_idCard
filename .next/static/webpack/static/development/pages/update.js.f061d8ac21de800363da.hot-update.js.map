{"version":3,"file":"static/webpack/static/development/pages/update.js.f061d8ac21de800363da.hot-update.js","sources":["webpack:///./pages/update.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Grid, Input, Button } from \"semantic-ui-react\";\r\nimport Layout from \"./layout\";\r\nimport web3 from \"../ethereum/web3\";\r\nimport ait from \"../ethereum/Ait\";\r\n\r\nclass change extends Component {\r\n  state = {\r\n    name: \"\",\r\n    rollno: \"\",\r\n    branch: \"\",\r\n    regno: \"\",\r\n    dob: \"\",\r\n    bloodGp: \" \",\r\n    nloading: false,\r\n    rloading: false,\r\n    bloading: false,\r\n    dloading: false,\r\n    gloading: false,\r\n    lloading: false,\r\n    errmsg: \"\"\r\n  };\r\n  changeName = async () => {\r\n    this.setState({ nloading: true });\r\n    try {\r\n    } catch (error) {}\r\n    const accounts = await web3.eth.getAccounts();\r\n    await ait.methods\r\n      .changeName(this.state.name, this.state.regno)\r\n      .send({ from: accounts[0] });\r\n    // console.log(this.state.regno);\r\n    this.setState({ nloading: false });\r\n  };\r\n  changeRollNo = async () => {\r\n    this.setState({ rloading: true });\r\n    const accounts = await web3.eth.getAccounts();\r\n    await ait.methods\r\n      .changeRollno(this.state.rollno, this.state.regno)\r\n      .send({ from: accounts[0] });\r\n    this.setState({ rloading: false });\r\n  };\r\n  changeBranch = async () => {\r\n    this.setState({ bloading: true });\r\n    const accounts = await web3.eth.getAccounts();\r\n    await ait.methods\r\n      .changeBranch(this.state.branch, this.state.regno)\r\n      .send({ from: accounts[0] });\r\n    this.setState({ bloading: false });\r\n  };\r\n  changeDob = async () => {\r\n    this.setState({ dloading: true });\r\n    const accounts = await web3.eth.getAccounts();\r\n    await ait.methods\r\n      .changeDob(this.state.dob, this.state.regno)\r\n      .send({ from: accounts[0] });\r\n    this.setState({ dloading: false });\r\n  };\r\n  changeBloodGp = async () => {\r\n    this.setState({ gloading: true });\r\n    const accounts = await web3.eth.getAccounts();\r\n    await ait.methods\r\n      .changeBloodGp(this.state.bloodGp, this.state.regno)\r\n      .send({ from: accounts[0] });\r\n    this.setState({ gloading: false });\r\n  };\r\n  left = async () => {\r\n    this.setState({ lloading: true });\r\n    const accounts = await web3.eth.getAccounts();\r\n    await ait.methods.left(this.state.regno).send({ from: accounts[0] });\r\n    this.setState({ lloading: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form>\r\n                <Form.Field inline>\r\n                  <label>Reg No. </label>\r\n                  <Input\r\n                    value={this.state.regno}\r\n                    onChange={event =>\r\n                      this.setState({ regno: event.target.value })\r\n                    }\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form onSubmit={this.changeName}>\r\n                <Form.Field inline>\r\n                  <label>Name :</label>\r\n                  <Input\r\n                    value={this.state.name}\r\n                    onChange={event =>\r\n                      this.setState({ name: event.target.value })\r\n                    }\r\n                  />\r\n                  <Button\r\n                    positive\r\n                    style={{ marginLeft: \"10px\" }}\r\n                    loading={this.state.nloading}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form onSubmit={this.changeRollNo}>\r\n                <Form.Field inline>\r\n                  <label>Roll No :</label>\r\n                  <Input\r\n                    value={this.state.rollno}\r\n                    onChange={event =>\r\n                      this.setState({ rollno: event.target.value })\r\n                    }\r\n                  />\r\n                  <Button\r\n                    positive\r\n                    style={{ marginLeft: \"10px\" }}\r\n                    loading={this.state.rloading}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form onSubmit={this.changeBranch}>\r\n                <Form.Field inline>\r\n                  <label>Branch :</label>\r\n                  <Input\r\n                    value={this.state.branch}\r\n                    onChange={event =>\r\n                      this.setState({ branch: event.target.value })\r\n                    }\r\n                  />\r\n                  <Button\r\n                    positive\r\n                    style={{ marginLeft: \"10px\" }}\r\n                    loading={this.state.bloading}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form onSubmit={this.changeDob}>\r\n                <Form.Field inline>\r\n                  <label>Date of Birth :</label>\r\n                  <Input\r\n                    value={this.state.dob}\r\n                    onChange={event =>\r\n                      this.setState({ dob: event.target.value })\r\n                    }\r\n                  />\r\n                  <Button\r\n                    positive\r\n                    style={{ marginLeft: \"10px\" }}\r\n                    loading={this.state.dloading}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form onSubmit={this.changeBloodGp}>\r\n                <Form.Field inline>\r\n                  <label>Blood Group :</label>\r\n                  <Input\r\n                    value={this.state.bloodGp}\r\n                    onChange={event =>\r\n                      this.setState({ bloodGp: event.target.value })\r\n                    }\r\n                  />\r\n                  <Button\r\n                    positive\r\n                    style={{ marginLeft: \"10px\" }}\r\n                    loading={this.state.gloading}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Form.Field>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form onSubmit={this.left}>\r\n                <Button positive style={{ marginTop: \"10px\" }} negative>\r\n                  LEFT!!!!\r\n                </Button>\r\n              </Form>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default change;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAHA;AAAA;AACA;AADA;AAIA;AAJA;AAAA;AAOA;AAAA;AACA;AARA;AAQA;AACA;AAAA;AAAA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AAKA;AAAA;AACA;AANA;AAMA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AAKA;AAAA;AACA;AANA;AAMA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AAKA;AAAA;AACA;AANA;AAMA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AAKA;AAAA;AACA;AANA;AAMA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AAGA;AAAA;AACA;AAJA;AAIA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAMA;AAAA;AACA;AAAA;AAMA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AADA;AAFA;AAYA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AADA;AAFA;AAOA;AACA;AAAA;AAAA;AACA;AAHA;AAaA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AADA;AAFA;AAOA;AACA;AAAA;AAAA;AACA;AAHA;AAaA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AADA;AAFA;AAOA;AACA;AAAA;AAAA;AACA;AAHA;AAaA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AADA;AAFA;AAOA;AACA;AAAA;AAAA;AACA;AAHA;AAaA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AADA;AAFA;AAOA;AACA;AAAA;AAAA;AACA;AAHA;AAaA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AA/MA;AACA;AAiNA;;;;A","sourceRoot":""}